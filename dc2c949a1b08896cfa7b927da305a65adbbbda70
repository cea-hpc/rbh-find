{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e207345f_48c409c3",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-04T13:59:25Z",
      "side": 1,
      "message": "question: wouldn\u0027t this be caught by the parser if the size is mandatory?",
      "range": {
        "startLine": 214,
        "startChar": 7,
        "endLine": 214,
        "endChar": 29
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9811431_1edba259",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-06-04T15:04:37Z",
      "side": 1,
      "message": "No because we can technically have a zero-length string ( \"\" ), so we must verify its length first.",
      "parentUuid": "e207345f_48c409c3",
      "range": {
        "startLine": 214,
        "startChar": 7,
        "endLine": 214,
        "endChar": 29
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8d13127_bf94f8df",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-06-09T16:24:40Z",
      "side": 1,
      "message": "I agree with @courrierg. In my tests, sscanf is not too phased off by being asked to parse an empty string, it\u0027ll just return EOF (ie. -1), same as if passed \" \" (one space).",
      "parentUuid": "f9811431_1edba259",
      "range": {
        "startLine": 214,
        "startChar": 7,
        "endLine": 214,
        "endChar": 29
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9570660d_9dcbb16b",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 214,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-06-11T06:44:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8d13127_bf94f8df",
      "range": {
        "startLine": 214,
        "startChar": 7,
        "endLine": 214,
        "endChar": 29
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8f0d1de_13fde0ac",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-04T13:59:25Z",
      "side": 1,
      "message": "question: why not %c as the suffix can only be only char long?",
      "range": {
        "startLine": 231,
        "startChar": 38,
        "endLine": 231,
        "endChar": 40
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ce51a00_e7be7167",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-04T13:59:25Z",
      "side": 1,
      "message": "question: wouldn\u0027t strtoul() be simpler?",
      "range": {
        "startLine": 231,
        "startChar": 8,
        "endLine": 231,
        "endChar": 14
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b131f84b_ac4254c6",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-06-04T15:04:37Z",
      "side": 1,
      "message": "We use sscanf because we can get both the size and the suffix at the same time. Moreover, we don\u0027t know the size of an unsigned long, as it can vary between systems, contrarily to PRIu64 which is always an unsigned int of 64 bits.",
      "parentUuid": "0ce51a00_e7be7167",
      "range": {
        "startLine": 231,
        "startChar": 8,
        "endLine": 231,
        "endChar": 14
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15025eb9_d1d6b225",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-06-04T15:04:37Z",
      "side": 1,
      "message": "Using %s allows us to catch the whole string and properly manage it, as using %c on \"64bToto\" would left the \"Toto\" part aside, and we wouldn\u0027t be able to catch it otherwise.",
      "parentUuid": "e8f0d1de_13fde0ac",
      "range": {
        "startLine": 231,
        "startChar": 38,
        "endLine": 231,
        "endChar": 40
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e601d5f_4bbfb1e6",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2021-06-07T08:46:48Z",
      "side": 1,
      "message": "It does not catch the wholestring as suffix is 3 char long. But, it will catch enough characters to crash if there is more than requested.",
      "parentUuid": "15025eb9_d1d6b225",
      "range": {
        "startLine": 231,
        "startChar": 38,
        "endLine": 231,
        "endChar": 40
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ada1f29_d1178f79",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-07T09:09:59Z",
      "side": 1,
      "message": "Then, there is a problem here. Since scanf(\"%s\") parses a string, it waits for a whitespace character or \u0027\\0\u0027. Suffix is 3 characters long so their is a buffer overflow if the siffix is gratter or equal to 3. I think scanf(\"%2s\") will solve the problem.",
      "parentUuid": "9e601d5f_4bbfb1e6",
      "range": {
        "startLine": 231,
        "startChar": 38,
        "endLine": 231,
        "endChar": 40
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8498bdd4_983dfd31",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-06-08T08:59:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ada1f29_d1178f79",
      "range": {
        "startLine": 231,
        "startChar": 38,
        "endLine": 231,
        "endChar": 40
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e846959_56faeaee",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-06-11T06:44:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b131f84b_ac4254c6",
      "range": {
        "startLine": 231,
        "startChar": 8,
        "endLine": 231,
        "endChar": 14
      },
      "revId": "dc2c949a1b08896cfa7b927da305a65adbbbda70",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}