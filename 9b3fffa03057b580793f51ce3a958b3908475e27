{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e13ed281_4a769886",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-05-17T12:03:48Z",
      "side": 1,
      "message": "a",
      "revId": "9b3fffa03057b580793f51ce3a958b3908475e27",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80bbc033_5147080c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2022-05-19T19:41:41Z",
      "side": 1,
      "message": "Hi, sorry for the delay.\n\nJust a comment on the method: it looks to me like this patch series is meant to ease the implementation of features in rbh-find-lustre. Is this correct?\n\nIf so, can you explain what is to be gained from merging these changes in rbh-find and not just in rbh-find-lustre?\n\nAlso, could you point to a couple of commits in rbh-find-lustre that were made possible thanks to this refactor?",
      "revId": "9b3fffa03057b580793f51ce3a958b3908475e27",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68b1b83d_9060bf09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2022-05-19T21:35:11Z",
      "side": 1,
      "message": "rbh-find-lustre isn\u0027t an rbh-find fork, but they use the new `librbh-find` added in I376dc4acec2dafb9144278cccebc1fd94ff71ab7 back in March -- everything in rbh-find can\u0027t be reused while core stuff is shared (installed in the lib) so it kind of makes sense if that is to be shared.\n\nhttps://review.gerrithub.io/c/cea-hpc/rbh-find-lustre/+/537619 uses it an cleans up a lot of code\n\nI\u0027m sorry, I also didn\u0027t notice rbh-find-lustre was built in a different repo until recently, I was imagining it as a backend... Not sure I like exposing all of this as external API as it\u0027s not versioned/cleanly versionable ; but I guess it\u0027s the same problem as with librbh itself (no ABI stability/guarantees right now so everything needs to be upgraded in lockstep) and it might improve in the future...\n\nBTW @Yoann: when cloning from gerrit the default branch isn\u0027t main so clone fails, I missed the first few commits already having been merged. github\u0027s code doesn\u0027t look up to date with gerrit either...",
      "parentUuid": "80bbc033_5147080c",
      "revId": "9b3fffa03057b580793f51ce3a958b3908475e27",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dde18d37_553f65f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-05-20T07:04:18Z",
      "side": 1,
      "message": "Yes, as stated by Dominique, rbh-find-lustre currently is a separate tool with its own repository. We have ideas of actually having it as a module to rbh-find, but this idea requires much further thinking and large modifications to how rbh-find works.\n\nRegarding the branch issue, thanks for notifying me, I had no idea gerrithub\u0027s main branch would be \"master\" and not \"main\". I\u0027ll solve the issue shortly",
      "parentUuid": "68b1b83d_9060bf09",
      "revId": "9b3fffa03057b580793f51ce3a958b3908475e27",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e14f633c_fbd12257",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-05-20T08:53:44Z",
      "side": 1,
      "message": "Also, I forgot to point out that lustre is not the only other tool we plan on developing, we have at least 2 others for SE Linux and another project called \"IO-sea\"",
      "parentUuid": "dde18d37_553f65f5",
      "revId": "9b3fffa03057b580793f51ce3a958b3908475e27",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac7f28cd_b83306a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2022-05-22T22:30:27Z",
      "side": 1,
      "message": "OK, I guess it\u0027s my fault for merging the `librbh-find` patch without questioning it more at the time.\n\nIt\u0027s not clear to me which feature you need that can\u0027t be built into `rhb-find` directly. On gerrithub, I see patches for a `-ost` option, a `-fid` option, and a `-hsm-state` option. I haven\u0027t reviewed those in detail, but I suspect that the code for those could be included directly into `rbh-find` without any significant drawback. Could you explain why you decided to create a separate tool instead?\n\n-----\n\nI\u0027m also realising that I missed a series of patches on librobinhood. Sorry about that.\n\nI have been quite busy in the past couple of months and it\u0027s probably going to last for a couple more weeks. In the meantime feel free to merge what you want/need.",
      "parentUuid": "e14f633c_fbd12257",
      "revId": "9b3fffa03057b580793f51ce3a958b3908475e27",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50d88dcd_da69cb5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2022-05-23T07:14:36Z",
      "side": 1,
      "message": "The problem is that if we want to re-define the ways some options or actions are managed, how can we specify that the base version of this action is to be used ? Or the Lustre one, or the SE Linux one, ... ?\n\nWe will most likely modify how \"-fls\" works, so how can we specify that \"rbh-find rbh:mongo:test -fls test.txt\" should use the Lustre-defined \"-fls\" option and not rbh-find\u0027s native one ?\n\nWe could technically add a \"-lustre\" to the command line, but is that not unnecessarily annoying (\"rbh-find rbh:mongo:test -lustre -fls test.txt\" VS \"rbh-lfind rbh:mongo:test -fls test.txt\") ?\n\n\nMoreover, with Posix and Lustre, we stay in a filesystem territory, but we plan on using rbh-find with the European project IO-SEA, that rely on objects rather than a filesystem. So it is easier to export rbh-find\u0027s base functionalities and modify the predicates and actions for our needs.\n\n\nFinally, when we talked about the xattrs issue regarding their typing, you hinted that we could create specific tools to interpret those xattrs and typings. We found that to be a pretty good solution for our needs - as it is more modular, and within librobinhood\u0027s philosophy - so we went ahead with it.\n\n----\n\nNo worries, we merged the librobinhood patches because they were up for a while, and needed them to be landed to actually progress on this rbh-find modifications.",
      "parentUuid": "ac7f28cd_b83306a8",
      "revId": "9b3fffa03057b580793f51ce3a958b3908475e27",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}