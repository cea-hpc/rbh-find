{
  "comments": [
    {
      "key": {
        "uuid": "b538d313_458fd434",
        "filename": "include/utils.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2019-12-11T08:10:58Z",
      "side": 1,
      "message": "typo: an",
      "range": {
        "startLine": 41,
        "startChar": 42,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcb48a2b_e6e15458",
        "filename": "include/utils.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2019-12-11T15:45:49Z",
      "side": 1,
      "message": "bump on this one (not done)",
      "parentUuid": "b538d313_458fd434",
      "range": {
        "startLine": 41,
        "startChar": 42,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d8808eb_af882ce6",
        "filename": "include/utils.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2019-12-11T19:52:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcb48a2b_e6e15458",
      "range": {
        "startLine": 41,
        "startChar": 42,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a32c9c35_48d3e803",
        "filename": "include/utils.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2019-12-17T12:21:59Z",
      "side": 1,
      "message": "No, not done? Or pushed somewhere else :D",
      "parentUuid": "8d8808eb_af882ce6",
      "range": {
        "startLine": 41,
        "startChar": 42,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7c7c358_12da5114",
        "filename": "include/utils.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2019-12-17T12:49:27Z",
      "side": 1,
      "message": "Done (my bad).",
      "parentUuid": "a32c9c35_48d3e803",
      "range": {
        "startLine": 41,
        "startChar": 42,
        "endLine": 41,
        "endChar": 43
      },
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a695502a_00d08bc6",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2019-12-06T16:19:40Z",
      "side": 1,
      "message": "equal would only works if you pass day as is: find -mtime 2 will find entries that are 2 days old, e.g. between $((24*3600)) and $((2*24*3600)) seconds old; not just exactly $((2*24*3600)) seconds old.\nYou\u0027d need to give a range and build a predicate with GREATER THAN x and LOWER THAN y",
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b0ea174_09ad3cbf",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2019-12-06T18:35:34Z",
      "side": 1,
      "message": "Thanks, I have quite a hard time wrapping my head around the [acm]min and [acm]time operators.\n\nOuch, that\u0027s not trivial to fix... \u003d/",
      "parentUuid": "a695502a_00d08bc6",
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dab660ee_e28a2c2a",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2019-12-11T10:00:20Z",
      "side": 1,
      "message": "self-correction: I got the range wrong, -mtime n will be between $((n*24*3600)) and $(((n+1)*24*3600)) ago\n(e.g. -mtime 0 will find files created today)\n\notoh this is really weird and -mmin seems to be the other way around, a file just created is found with find -mmin 1 and not find -mmin 0; this stuff is so weird...",
      "parentUuid": "2b0ea174_09ad3cbf",
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "219c639c_965e64b2",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2019-12-11T12:35:22Z",
      "side": 1,
      "message": "OK, so I had a few questions to try and clarify, but it turns out find\u0027s code is rather readable:\n\n/* pred_timewindow\n *\n * Returns true if THE_TIME is\n * COMP_GT: after the specified time\n * COMP_LT: before the specified time\n * COMP_EQ: after the specified time but by not more than WINDOW seconds.\n */\nstatic bool\npred_timewindow (struct timespec ts, struct predicate const *pred_ptr, int window)\n{\n  switch (pred_ptr-\u003eargs.reftime.kind)\n    {\n    case COMP_GT:\n      return compare_ts (ts, pred_ptr-\u003eargs.reftime.ts) \u003e 0;\n\n    case COMP_LT:\n      return compare_ts (ts, pred_ptr-\u003eargs.reftime.ts) \u003c 0;\n\n    case COMP_EQ:\n      {\n\t/* consider \"find . -mtime 0\".\n\t *\n\t * Here, the origin is exactly 86400 seconds before the start\n\t * of the program (since -daystart was not specified).   This\n\t * function will be called with window\u003d86400 and\n\t * pred_ptr-\u003eargs.reftime.ts as the origin.  Hence a file\n\t * created the instant the program starts will show a time\n\t * difference (value of delta) of 86400.   Similarly, a file\n\t * created exactly 24h ago would be the newest file which was\n\t * _not_ created today.   So, if delta is 0.0, the file\n\t * was not created today.  If the delta is 86400, the file\n\t * was created this instant.\n\t */\n\tdouble delta \u003d ts_difference (ts, pred_ptr-\u003eargs.reftime.ts);\n\treturn (delta \u003e 0.0 \u0026\u0026 delta \u003c\u003d window);\n      }\n    }\n  assert (0);\n  abort ();\n}\n\nbool\npred_amin (const char *pathname, struct stat *stat_buf, struct predicate *pred_ptr)\n{\n  (void) \u0026pathname;\n  return pred_timewindow (get_stat_atime(stat_buf), pred_ptr, 60);\n}",
      "parentUuid": "dab660ee_e28a2c2a",
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cf9cc59_97ca46f7",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2019-12-11T12:44:23Z",
      "side": 1,
      "message": "That part is readable, the parse_time vs parse_mmin (do_parse_xmin) is much more dubious...",
      "parentUuid": "219c639c_965e64b2",
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a436e585_6b5661b8",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2019-12-11T15:38:05Z",
      "side": 1,
      "message": "Took me quite a bit of time, but I think the result should be satisfying.\n\nFor the record, I broke compatibility with gnu-find here to do the thing that made most sense to me.\nThat is:\n\n -amin  n  files accessed between \"n - 0.5\" minutes ago and \"n + 0.5\" minutes ago\n -amin -n  files accessed n minutes ago or less\n -amin +n  files accessed n minutes ago or more\n\nThe same comparisons will apply to -[acm]time as well (replacing \"minutes\" with \"days\").",
      "parentUuid": "5cf9cc59_97ca46f7",
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cac83943_926a9cb4",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2019-12-11T15:45:49Z",
      "side": 1,
      "message": "eeh? I\u0027d agree with both behaving the same but please go with either behaviour and not a new one? From my experience -[acm]time is most used so I\u0027d stick with what that does.\nAnd if we have any logging mecanism at all I would definitely print both edges for people to be able to debug something......... :D",
      "parentUuid": "a436e585_6b5661b8",
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "838f9a70_161d6871",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2019-12-11T19:52:36Z",
      "side": 1,
      "message": "\u003e eeh? I\u0027d agree with both behaving the same but please go with either behaviour and not a new one? From my experience -[acm]time is most used so I\u0027d stick with what that does.\n\nDone (at least, I did something that I think looks like regular -atime)\n\n\u003e And if we have any logging mecanism at all I would definitely print both edges for people to be able to debug something......... :D\n\nNope, still no logging. \u003d) Sorry",
      "parentUuid": "cac83943_926a9cb4",
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "987b93ea_a446c05f",
        "filename": "src/filters.c",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2019-12-11T12:35:22Z",
      "side": 1,
      "message": "(minor) should explain what it is that needs fixing\n\nHere it has to do with the mongo backend not handling the RBH_FVT_TIME filter value type correctly.\nThat explains why the following line is not:\n\n filter \u003d rbh_filter_compare_time_new(op, predicate2filter_field[predicate], then);\n\nMaybe it would be better to just fix the mongo backend and not work around it at all...",
      "range": {
        "startLine": 97,
        "startChar": 7,
        "endLine": 97,
        "endChar": 12
      },
      "revId": "9c3687ef4458ad1fd6fcc592918f86abeab93186",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}