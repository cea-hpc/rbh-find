{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25c2cc3e_62720576",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:13:56Z",
      "side": 1,
      "message": "(typo) rbh-find",
      "range": {
        "startLine": 3,
        "startChar": 27,
        "endLine": 3,
        "endChar": 44
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb570561_978dffb3",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-10T13:46:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25c2cc3e_62720576",
      "range": {
        "startLine": 3,
        "startChar": 27,
        "endLine": 3,
        "endChar": 44
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71022a7b_61cac25f",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:13:56Z",
      "side": 1,
      "message": "(style) no need for backslashes after `\u0026\u0026`, `||`, or `|` at the end of a line.",
      "range": {
        "startLine": 66,
        "startChar": 43,
        "endLine": 66,
        "endChar": 44
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "336fc2ad_c999f7c1",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-10T13:46:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71022a7b_61cac25f",
      "range": {
        "startLine": 66,
        "startChar": 43,
        "endLine": 66,
        "endChar": 44
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfa7e43a_349aeb2e",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:13:56Z",
      "side": 1,
      "message": "(style) One way to write this more consisely:\n\n ! rbh_find ...\n\n`set -e` will take care of errorring for you",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e8f7c5d_70e643fb",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-10T13:46:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfa7e43a_349aeb2e",
      "range": {
        "startLine": 66,
        "startChar": 4,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e11c829e_c10d3790",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:13:56Z",
      "side": 1,
      "message": "(style) Using \"a\" as a filename and as the name of the xattr is a bit confusing, let\u0027s call \"a\" \"file\". And let\u0027s use the long options while we are at it:\n\n touch file\n setfattr --name user.key --value value file",
      "range": {
        "startLine": 74,
        "startChar": 21,
        "endLine": 74,
        "endChar": 29
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3856352_4aee4b58",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-10T13:46:28Z",
      "side": 1,
      "message": "There\u0027s currently a bug unfortunately with rbh-sync, where if you have a name/value too long (even 10 characters combined), rbh-sync will return an error on a map copy. I checked a bit with GDB, and found out the problem is in src/fsentry.c, in \"rbh_fsentry_new\": the size considered for the destination of the copy is too small, so we end up with a copy that cannot be completed, and an error.\nHowever I wasn\u0027t able to find what\u0027s the source of the problem precisely...\nSo currently, this isn\u0027t possible...",
      "parentUuid": "e11c829e_c10d3790",
      "range": {
        "startLine": 74,
        "startChar": 21,
        "endLine": 74,
        "endChar": 29
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "320c8de1_e004353c",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-12-10T14:28:54Z",
      "side": 1,
      "message": "tests shouldn\u0027t have to work around bugs - design tests as we want them :)\n\nI\u0027ve submitted a fix for your bug here:\nhttps://review.gerrithub.io/c/cea-hpc/librobinhood/+/529206\n\n(took me a bit of time, but basically the problem isn\u0027t \"too big\", just bad luck on key length -- at that point need to look at how size is counted vs. how it\u0027s eaten up later on. Calling rbh_fsentry_new with only xattr helped.)",
      "parentUuid": "d3856352_4aee4b58",
      "range": {
        "startLine": 74,
        "startChar": 21,
        "endLine": 74,
        "endChar": 29
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a08648f0_9362e38d",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-10T15:02:59Z",
      "side": 1,
      "message": "Thanks a lot for the help and the patch ðŸ˜Š\nDone",
      "parentUuid": "320c8de1_e004353c",
      "range": {
        "startLine": 74,
        "startChar": 21,
        "endLine": 74,
        "endChar": 29
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37f4d455_f6482c86",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:13:56Z",
      "side": 1,
      "message": "(question) How does this work? Does it rely on Mongo\u0027s \"dot notation\" to access fields inside documents? If so, this isn\u0027t portable across backends.",
      "range": {
        "startLine": 79,
        "startChar": 40,
        "endLine": 79,
        "endChar": 46
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "423fcfdc_b5b0a44d",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-10T13:46:28Z",
      "side": 1,
      "message": "Yes and no: we will just check the field xattrs.user.a in the backend by using the -xattr as defined in the ADR; Mongo, fortunately, allows this precise syntax to access fields in documents so it works as is for that backend. On the other hand, there\u0027s no other modification done according to the backend, so yes it might not be portable.",
      "parentUuid": "37f4d455_f6482c86",
      "range": {
        "startLine": 79,
        "startChar": 40,
        "endLine": 79,
        "endChar": 46
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b97a522e_f7ebbfe1",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-12T13:28:53Z",
      "side": 1,
      "message": "\u003e \u003e Does it rely on Mongo\u0027s \"dot notation\" to access fields inside documents?\n\n\u003e Yes an no (...)\n\u003e Mongo, fortunately, allows this precise syntax to access fields in documents so it works as is for that backend.\n\nSo just \"yes\" then.\n\nTo be fair, the posix backend already has a similar issue where it makes no effort at splitting xattrs around dots and the only reason we get hierarchical xattrs in mongo is because of mongo\u0027s \"dot notation\". The question can be asked whether it\u0027s the posix backend\u0027s job to split xattrs around dots considering FS xattrs are not hierarchical in nature beyond maybe the first dot. Also, to be completely fair, the reason this parsing didn\u0027t make it into the posix backend is that it was already quite a bit of work to just fetch the xattrs and return them.\n\nIMO, while there is a point in producing less than perfect implementation for new features, it\u0027s a dangerous game to start and build on those imperfect implementations. I feel like there is an exponential time complexity to building on top of technical debt.\n\nI\u0027m not fundamentally opposed to it, but I expect a strong commitment from someoneâ„¢ that all the code will be cleaned at some point.",
      "parentUuid": "423fcfdc_b5b0a44d",
      "range": {
        "startLine": 79,
        "startChar": 40,
        "endLine": 79,
        "endChar": 46
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6ee6d8c_3f9b52be",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-13T08:38:59Z",
      "side": 1,
      "message": "I think that it\u0027s the backend\u0027s job of correctly managing the xattrs and how to access them based on a string. So in that regard, just giving \"user.a\" to the mongo backend is enough for it to understand that it should fetch the entries which have a key \"a\" in the xattrs map \"user\".\n\nIf another backend is implemented, it should be its job to understand this notation in the same way as the mongo backend.",
      "parentUuid": "b97a522e_f7ebbfe1",
      "range": {
        "startLine": 79,
        "startChar": 40,
        "endLine": 79,
        "endChar": 46
      },
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f7bdeb_f5696cde",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:13:56Z",
      "side": 1,
      "message": "(major) Let\u0027s be critical, this does not test anything about -xattr. The -not -not will be swallowed by the mongo backend before it reaches any xattr-specific code.",
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b281dd4_723d9f75",
        "filename": "tests/test_xattr.bash",
        "patchSetId": 3
      },
      "lineNbr": 109,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-10T13:46:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00f7bdeb_f5696cde",
      "revId": "da96ccd982c18782b7ec6736a7d08fd9262c864d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}