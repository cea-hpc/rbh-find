{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3ea1bfc1_79ee3a43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2021-06-24T09:28:38Z",
      "side": 1,
      "message": "Looks good to me.",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86e72a6e_8ddb135d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-06-27T12:32:47Z",
      "side": 1,
      "message": "Alright, this is still not quite correct [0][1], but I feel this has been dragging on for long enough. It works for the most common use cases.\n\nLet\u0027s document that the implementation is a work in progress (README + commit message + sources), merge it, and we can revisit the differences at a later point in time.\n\nDon\u0027t beat yourself up too hard, this was always going to be a challenge to get right.\n\n[0] examples of modes that don\u0027t give the same result:\n\n   input | reference | rbh-find\n \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n   \u003d0600 |      0600 |    error\n g\u003dw,o\u003dr |       042 |       02\n\n[1] the \u0027X\u0027 symbol is hard to handle",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "782256f7_6a1bfd90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-06-27T13:50:31Z",
      "side": 1,
      "message": "Good work! -perm is useful, it\u0027s good to have done.\nAs said in reply to one of Quentin\u0027s comments it\u0027s a very messy option though, don\u0027t beat yourself over it.",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c7297b9_0c53f05b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-06-27T13:50:31Z",
      "side": 1,
      "message": "ah, I\u0027m just noticing this one after I wrote plenty of examples in the code :D\n\nI agree we don\u0027t need 100% compat, it\u0027s fine to have most common cases working.\nI think g\u003dw,o\u003dr should work at least though, that kind of kills the point of commas... Rest is probably fine I agree, I don\u0027t think I\u0027ve ever seen anyone use +-\u003d\u003cnumeral\u003e",
      "parentUuid": "86e72a6e_8ddb135d",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7279f9ca_305b460a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "Thanks for your review :)",
      "parentUuid": "782256f7_6a1bfd90",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9818728_dc6ba2a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "The examples you gave are now fixed thanks to the comments of Dominique.\n\nDo you have examples of how \u0027X\u0027 is not handled correctly? They might not be that hard to fix.",
      "parentUuid": "4c7297b9_0c53f05b",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f43c848_4f36f4b8",
        "filename": "README.rst",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-06-27T12:32:47Z",
      "side": 1,
      "message": "(minor) As you write later in this file, u+s will only report files whose mode is exactly u+s, won\u0027t it? In this case, doesn\u0027t it make more sense to use `/u+s` here?",
      "range": {
        "startLine": 77,
        "startChar": 34,
        "endLine": 77,
        "endChar": 37
      },
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2b62ef2_7f090fd8",
        "filename": "README.rst",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "Yes, that\u0027s what \u0027/u+s\u0027 does.\n\nDone",
      "parentUuid": "0f43c848_4f36f4b8",
      "range": {
        "startLine": 77,
        "startChar": 34,
        "endLine": 77,
        "endChar": 37
      },
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10bc5476_ab2b1c99",
        "filename": "meson.build",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-06-27T12:32:47Z",
      "side": 1,
      "message": "(style) This is not a configuration check (nor a `configuration check` \u003e `function`), it should not be here.\n\nHave you considered lowering the `warning_level` to 2 instead?",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aecdd1e1_40366114",
        "filename": "meson.build",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-06-27T13:50:31Z",
      "side": 1,
      "message": "reducing warning_level to 2 is not enough.\nThere are however warnings being ignored by using -Wno-pedantic that are worth fixing (in librobinhood......), rbh_backend_destroy, rbh_mut_iter_destroy and rbh_iter_destroy have a return statement with expression in void functions.\n\nThe other warnings are also in librobinhood, but are rather practical (errno ?: save_errno ternary with omitted middle statement and range expressions in switch statements), so I guess we have to find some common grounds here",
      "parentUuid": "10bc5476_ab2b1c99",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24b5714e_ed4c5878",
        "filename": "meson.build",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "My understanding is that warning_level \u003d 2 will remove pedantic but I imagine other warnings as well. And if I\u0027m correct, there is no specific warning for the range case statement, it comes with pedantic.\n\nI\u0027ve seen that it\u0027s possible to use:\n\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Wpedantic\"\n...\n#pragma GCC diagnostic pop\n\narround the code, is this something acceptable to you ? I imagine this would only solve the problem for gcc, not clang.\n\nOne solution would be to revert back to the if/else if/else statement which is perfectly fine too.",
      "parentUuid": "aecdd1e1_40366114",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25088dca_8cf1d0a1",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 321,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-06-27T13:50:31Z",
      "side": 1,
      "message": "(nitpick) this might make more sense to be reverted?\nWhen used later I took a minute to understand why you would want to set all modes if who is not empty",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2e54706_4715218b",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 321,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "Yes, you\u0027re right. I\u0027ve changed the name without realizing that it changed its meaning.",
      "parentUuid": "25088dca_8cf1d0a1",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "921d7e30_a6ace544",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 366,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-06-27T13:50:31Z",
      "side": 1,
      "message": "if who is empty, we can actually pass an octal mode to find e.g.\n`find -perm \u003d444` or even `find -perm u\u003dx,-100` (final mode 0) work.",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3caeff5b_479b4538",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 366,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "921d7e30_a6ace544",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aaf643ff_07489bda",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-06-27T13:50:31Z",
      "side": 1,
      "message": "this actually seems to work with no who set at all (`find -perm a\u003dr,-u,o+x` yields 0001, also tested with +/\u003d)",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea46853d_1d6bc752",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "\u0027-u\u0027 seems to mean remove user perm from everyone. This means in your case that perm is 0000 after parsing \u0027-u\u0027.\n\nDone",
      "parentUuid": "aaf643ff_07489bda",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e15a8f1_d53f1d04",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 425,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-06-27T13:50:31Z",
      "side": 1,
      "message": "need to pass who as argument and only apply to the involved bits",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b2c0f77_97322c24",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 425,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e15a8f1_d53f1d04",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e76a45e_abd97440",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 553,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-06-27T13:50:31Z",
      "side": 1,
      "message": "playing human fuzzer, there return errors with find but not with rbh-find:\n find -perm a\n find -perm /\n find -perm -\n\n(note find -perm \u0027\u003d\u0027 or \u0027a\u003d\u0027 works and mode \u003d 0 as rbh-find)\n\nThis is probably not very important...",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fe08743_bfd27f90",
        "filename": "src/filters.c",
        "patchSetId": 7
      },
      "lineNbr": 553,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-06-28T10:29:36Z",
      "side": 1,
      "message": "Thanks for the comment. My test for failed permissions didn\u0027t test anything. It should have caught the \u0027-\u0027. It is fixed now.",
      "parentUuid": "7e76a45e_abd97440",
      "revId": "c1fdd901bd1f95b3f63c07a71206fbb8f698f822",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}