{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "86c17c1c_e699b8a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-07-10T09:29:02Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "931724342c73787cc2e241c358db3df2b17d041d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7ceb0c5_2c282a2e",
        "filename": "rbh-find.c",
        "patchSetId": 2
      },
      "lineNbr": 322,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-07-10T10:04:47Z",
      "side": 1,
      "message": "actually sorry... coming back here: isn\u0027t the error not just that this uses filter here instead of left_filter, and tmp should keep NULL?\n\nThis function has too many hoops for me; if this works I\u0027m fine with the current code but I don\u0027t understand why there\u0027s an extra and here -- would appreciate an extra test with a -not in here somewhere.",
      "revId": "931724342c73787cc2e241c358db3df2b17d041d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8a874ce_0de322ca",
        "filename": "rbh-find.c",
        "patchSetId": 2
      },
      "lineNbr": 322,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-07-10T11:10:21Z",
      "side": 1,
      "message": "Took some time to test and I understand the issue now, actions need to know what happened left of it within the filter.\n\nSo this patch leads to some duplication in the query with that and but it\u0027s required to negate just that part, and I don\u0027t see how to do better, so good for me. Hopefully final now :-D",
      "parentUuid": "c7ceb0c5_2c282a2e",
      "revId": "931724342c73787cc2e241c358db3df2b17d041d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b11fcdff_1cdaf3c1",
        "filename": "rbh-find.c",
        "patchSetId": 2
      },
      "lineNbr": 322,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-07-10T11:28:55Z",
      "side": 1,
      "message": "\u003e isn\u0027t the error not just that this uses filter here instead of left_filter, and tmp should keep NULL?\n\n- _filter: the predicates parsed by the \"upper-expression\"(s)\n- filter: the predicates of the current (sub-)expression\n- left_filter: _filter + filter, ie. all the predicates parsed up until now\n- negated_left_filter: ! left_filter (it\u0027s only used for -or) [0]\n- tmp: just a pointer holder for manipulating other filters\n\n[0] https://github.com/cea-hpc/rbh-find/blob/95b36b070c6adf1beda3c1861ca1c283fbf5a29e/rbh-find.c#L279\n\n\u003e This function has too many hoops for me\n\nFor me as well ðŸ˜‚\n\n\u003e I don\u0027t understand why there\u0027s an extra and here\n\nLet\u0027s go over an example:\n\n $ rbh-find rbh:mongo:test -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n            ^^^^^^^^^^^^^^\n            \"you are here\"\n\n uri \u003d NULL -\u003e rbh:mongo:test\n\nGetting into the good stuff: ðŸ¤“\n\n $ rbh-find ... -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n                ^^^^^^^^^^^^^^^^\n                 \"you are here\"\n\n _filter \u003d NULL\n filter \u003d NULL -\u003e {path: \u0027*/.git/*\u0027}\n\n ----------------------------------------------------------------------------------\n\n $ rbh-find ... -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n                                 ^^\n                           \"you are here\"\n\n _filter \u003d NULL\n        -\u003e {                                         ---\n             not: [              --- `left_filters`    | `negated_left_filters`\n               {path: \u0027*/.git/*}   |   from the        |        from the\n             ]                   --- previous step     |     previous step\n           }                                         ---\n filter \u003d ... -\u003e NULL\n\n ----------------------------------------------------------------------------------\n\n $ rbh-find ... -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n                                    ^^^^^^^\n                                 \"you are here\"\n\n _filter \u003d {not: [{path: \u0027*/.git/*}]}\n filter \u003d NULL -\u003e {type: file}\n\n ----------------------------------------------------------------------------------\n\n $ rbh-find ... -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n                                            ^^\n                                      \"you are here\"\n\n _filter \u003d ...\n        -\u003e {\n             and: [\n               {not: [{path: \u0027*/.git/*}]},\n               {type: file}\n             ]\n           }\n filter \u003d ... -\u003e NULL\n\n ----------------------------------------------------------------------------------\n\n $ rbh-find ... -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n                                               ^^^^^^^^^^^\n                                              \"you are here\"\n\n _filter \u003d {\n             and: [\n               {not: [{path: \u0027*/.git/*}]},\n               {type: file}\n             ]\n           }\n filter \u003d NULL -\u003e {name: \u0027*.h\u0027}\n\n ----------------------------------------------------------------------------------\n\n $ rbh-find ... -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n                                                           ^^\n                                                     \"you are here\"\n\n _filter \u003d ...\n        -\u003e {\n             not: [\n               {                                    ---\n                 and: [                               |\n                   {                                  |\n                     and: [                           |\n                       {not: [{path: \u0027*/.git/*}]},    | `left_filter`\n                       {type: file}                   |    from the\n                     ]                                |  previous step\n                   },                                 |\n                   {name: \u0027*.h\u0027}                      |\n                 ]                                    |\n               }                                    ---\n             ]\n           }\n filter \u003d ... -\u003e NULL\n\n ----------------------------------------------------------------------------------\n\n $ rbh-find ... -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n                                                              ^^^^^^^^^^\n                                                            \"you are here\"\n\n _filter \u003d {\n             not: [\n               {\n                 and: [                              # Simplified things a bit\n                   {not: [{path: \u0027*/.git/*}]},       # for readability\n                   {type: file}\n                   {name: \u0027*.h\u0027}\n                 ]\n               }\n             ]\n           }\n filter \u003d NULL -\u003e {name: \u0027*.c\u0027}\n\n ----------------------------------------------------------------------------------\n\n $ rbh-find ... -path \u0027*/.git/*\u0027 -o -type f \\( -name \u0027*.h\u0027 -o -name \u0027*.c\u0027 \\)\n                                                                          ^^\n                                                                    \"you are here\"\n\n This is a two step operation, because we first \"close\" the \"-o\":\n\n _filter \u003d {\n             and: [\n               {not: [{path: \u0027*/.git/*}]},\n               {type: file}\n             ]\n           }\n filter \u003d {name: \u0027*.h\u0027} -\u003e {or: [{name: \u0027*.h\u0027}, {name: \u0027*.c\u0027}]}\n\n And then, we close the \u0027\\(\u0027:\n\n _filter \u003d {not: [{path: \u0027*/.git/*}]}\n filter \u003d {type: file}\n       -\u003e {\n            and: [\n              {type: file},\n              {or: [{name: \u0027*.h\u0027}, {name: \u0027*.c\u0027}]}\n            ]\n          }",
      "parentUuid": "c7ceb0c5_2c282a2e",
      "revId": "931724342c73787cc2e241c358db3df2b17d041d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}