{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d7e1b1ef_c45397aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T03:10:58Z",
      "side": 1,
      "message": "more tests are good! Guillaume\u0027s comments too, so leaving this mostly as is :)",
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1500b39_7369aee6",
        "filename": "tests/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-22T13:04:13Z",
      "side": 1,
      "message": "question: why use this ? check is not used in the test",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 12,
        "endChar": 5
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bea4a6b0_f2c1614c",
        "filename": "tests/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T09:03:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1500b39_7369aee6",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 12,
        "endChar": 5
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cc0b0ff_4b81414d",
        "filename": "tests/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-22T13:04:13Z",
      "side": 1,
      "message": "style: I would leave the names on a separate line as more tests should come in the future",
      "range": {
        "startLine": 14,
        "startChar": 20,
        "endLine": 14,
        "endChar": 46
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e028a5d_bce82f9a",
        "filename": "tests/meson.build",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T09:03:57Z",
      "side": 1,
      "message": "This is more consistent with the RBH V4 coding style, just like this:\n\n/* This */\nlong_function_name(long_argument_1, long_argument_2,\n                   long_argument_3, long_argument_4);\n\n/* Is better than */\nlong_function_name(long_argument_1,\n                   long_argument_2,\n                   long_argument_3,\n                   long_argument_4);",
      "parentUuid": "7cc0b0ff_4b81414d",
      "range": {
        "startLine": 14,
        "startChar": 20,
        "endLine": 14,
        "endChar": 46
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8c437c5_b44e29d4",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-22T13:04:13Z",
      "side": 1,
      "message": "suggest: this can be inferred from the number of arguments, something like: `$#-1`",
      "range": {
        "startLine": 19,
        "startChar": 4,
        "endLine": 19,
        "endChar": 20
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99642097_05fce204",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T09:03:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8c437c5_b44e29d4",
      "range": {
        "startLine": 19,
        "startChar": 4,
        "endLine": 19,
        "endChar": 20
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc5a3419_196c533f",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-22T13:04:13Z",
      "side": 1,
      "message": "suggest: wc -l ?",
      "range": {
        "startLine": 21,
        "startChar": 45,
        "endLine": 21,
        "endChar": 56
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94ea04e8_10b1e145",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T09:03:57Z",
      "side": 1,
      "message": "No because echo adds a newline no matter what, so the result may be flawed for wc, especially in the case of empty strings",
      "parentUuid": "cc5a3419_196c533f",
      "range": {
        "startLine": 21,
        "startChar": 45,
        "endLine": 21,
        "endChar": 56
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c33aef7_bc5f0a3a",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-22T13:04:13Z",
      "side": 1,
      "message": "minor: if you quote the arguments line 40-43 you should keep doing it after. Otherwise, the first time is useless.",
      "range": {
        "startLine": 45,
        "startChar": 19,
        "endLine": 45,
        "endChar": 24
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeababa6_afb6d704",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T03:10:58Z",
      "side": 1,
      "message": "to expand on this comment: I recommend running shellcheck (either the online parser or install it)\nIt\u0027s also possible to have it run automatically in vim (ALE) or emacs (flycheck-mode), probably also possible in other tools if you use anything else - it\u0027s quite useful.",
      "parentUuid": "5c33aef7_bc5f0a3a",
      "range": {
        "startLine": 45,
        "startChar": 19,
        "endLine": 45,
        "endChar": 24
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "263ac3f3_5caf51be",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T09:03:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aeababa6_afb6d704",
      "range": {
        "startLine": 45,
        "startChar": 19,
        "endLine": 45,
        "endChar": 24
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12cbddd2_c34c0dd5",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-22T13:04:13Z",
      "side": 1,
      "message": "question: why is / returned by find ? Shouldn\u0027t \"-size 1M\" target files of size [1M;2M) ? Or is it [0M;1M] ?",
      "range": {
        "startLine": 52,
        "startChar": 30,
        "endLine": 52,
        "endChar": 33
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2ed6822_fcbc6223",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2021-11-23T03:10:58Z",
      "side": 1,
      "message": "There\u0027s a warning about this in the -size section of find man page:\n\n  Bear in mind that the size is rounded up to the next unit. Therefore\n  -size -1M  is  not  equivalent to -size -1048576c.  The former only\n  matches empty files, the latter matches files from 0 to 1,048,575 bytes.\n\n(so -size 1M matches ]0;1M] (0 is excluded))",
      "parentUuid": "12cbddd2_c34c0dd5",
      "range": {
        "startLine": 52,
        "startChar": 30,
        "endLine": 52,
        "endChar": 33
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9593ddf_cfb38c78",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-22T13:04:13Z",
      "side": 1,
      "message": "suggest: rather that having all these variables, I think you can just put them in the arguments line 80 and 82:\n\nmkdir -p \"$dir/dir\"\ntest_size \"$path\" \"rbh:posix:$dir\" \"$mongo_URI\" \"$mongo_URI#dir\"",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 76,
        "endChar": 25
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df129b4a_3faddb26",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T09:03:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9593ddf_cfb38c78",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 76,
        "endChar": 25
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "373f1c73_93a2ca39",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2021-11-22T13:04:13Z",
      "side": 1,
      "message": "suggest: I think you can just use this directly line 82 instead of making a variable",
      "range": {
        "startLine": 78,
        "startChar": 21,
        "endLine": 78,
        "endChar": 45
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99e497c5_b30f90ae",
        "filename": "tests/test_size.bash",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-11-23T09:03:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "373f1c73_93a2ca39",
      "range": {
        "startLine": 78,
        "startChar": 21,
        "endLine": 78,
        "endChar": 45
      },
      "revId": "672ecc6fb7a066f987fc4a88975b80082f28d2ba",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}