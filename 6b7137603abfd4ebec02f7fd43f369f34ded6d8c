{
  "comments": [
    {
      "key": {
        "uuid": "54ed8307_9f3198a5",
        "filename": "rbh-find.c",
        "patchSetId": 1
      },
      "lineNbr": 371,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2020-05-15T09:52:37Z",
      "side": 1,
      "message": "(ssize_t?)",
      "range": {
        "startLine": 371,
        "startChar": 9,
        "endLine": 371,
        "endChar": 12
      },
      "revId": "6b7137603abfd4ebec02f7fd43f369f34ded6d8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5568201_4a06264b",
        "filename": "rbh-find.c",
        "patchSetId": 1
      },
      "lineNbr": 371,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2020-05-15T14:34:15Z",
      "side": 1,
      "message": "Bah, there is no need. `index\u0027 is an int.",
      "parentUuid": "54ed8307_9f3198a5",
      "range": {
        "startLine": 371,
        "startChar": 9,
        "endLine": 371,
        "endChar": 12
      },
      "revId": "6b7137603abfd4ebec02f7fd43f369f34ded6d8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0aa55f3_510164ab",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2020-05-15T09:52:37Z",
      "side": 1,
      "message": "it complained about sign compare here? so sign compare or overflow... just make delta signed instead?",
      "revId": "6b7137603abfd4ebec02f7fd43f369f34ded6d8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5398d4b_88942ed7",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2020-05-15T14:34:15Z",
      "side": 1,
      "message": "If time_t is signed, I think it is safe to let it be a negative number (it is probably even \"more right\").",
      "parentUuid": "b0aa55f3_510164ab",
      "revId": "6b7137603abfd4ebec02f7fd43f369f34ded6d8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47a30b98_9ab7c54a",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2020-05-15T14:51:47Z",
      "side": 1,
      "message": "problem is if `delta \u003e now + intmax`, which is possible with different signednes. Having the check protected from that, too.",
      "parentUuid": "a5398d4b_88942ed7",
      "revId": "6b7137603abfd4ebec02f7fd43f369f34ded6d8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2258edaf_f30be125",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2020-05-18T14:41:41Z",
      "side": 1,
      "message": "Yep. I don\u0027t know how to do this properly though. There is no official MIN/MAX range for time_t.\n\nMaybe I\u0027ll just revert back to checking `now \u003c delta`... What do you think?",
      "parentUuid": "47a30b98_9ab7c54a",
      "revId": "6b7137603abfd4ebec02f7fd43f369f34ded6d8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a56d63f8_d30f0546",
        "filename": "src/filters.c",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2020-05-18T16:05:29Z",
      "side": 1,
      "message": "\"When in doubt code same bugs as gnu find\". . . So I had a look and they use time_t... Well a timespec.\nThey actually support floating point values! Which we don\u0027t :p I didn\u0027t know!\n\nSo findutils pseudocode is:\n - xstrtod to convert string to float (double)\n - use modf to split fractional value\n - (assert fractional part was \u003c1)\n - perform operation (orig value - offset) on second\n - check for overflow on second and die\n - perform operation on nanosecond\n - check for overflow on ns and perform carry if required\n\nhttps://git.savannah.gnu.org/cgit/findutils.git/tree/find/parser.c#n3106\n\nI\u0027m not sure about the way they check overflow but I believe using timespec is the best way to go. Can be done in a separate patch though, that is no longer quite trivial, we can keep code this way and mark a todo...",
      "parentUuid": "2258edaf_f30be125",
      "revId": "6b7137603abfd4ebec02f7fd43f369f34ded6d8c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}