{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "69566676_40c914c2",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 620,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:02:19Z",
      "side": 1,
      "message": "(minor) It does not make as much sense to use `predicate2filter_field` for xattrs since you need to further edit the field anyway. It would be more straightforward to use:\n\n struct rbh_filter_field field \u003d {\n     .fsentry \u003d RBH_FP_INODE_XATTRS,\n     .xattr \u003d xattr_field,\n };",
      "range": {
        "startLine": 620,
        "startChar": 36,
        "endLine": 620,
        "endChar": 70
      },
      "revId": "a996bd72adb402760c4fa85efcd84e70419e1b50",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da0f01fa_4ddb36e4",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 620,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-09T13:26:18Z",
      "side": 1,
      "message": "That\u0027s what I thought at first, but I thought it would be strange to define a new type of filter field here, and not have it in the static array...\nDone",
      "parentUuid": "69566676_40c914c2",
      "range": {
        "startLine": 620,
        "startChar": 36,
        "endLine": 620,
        "endChar": 70
      },
      "revId": "a996bd72adb402760c4fa85efcd84e70419e1b50",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ac75d70_58f28616",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 625,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:02:19Z",
      "side": 1,
      "message": "(defect) No, this is already checked in parse_predicate()",
      "range": {
        "startLine": 623,
        "startChar": 4,
        "endLine": 625,
        "endChar": 84
      },
      "revId": "a996bd72adb402760c4fa85efcd84e70419e1b50",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bae600af_6f0e16df",
        "filename": "src/filters.c",
        "patchSetId": 2
      },
      "lineNbr": 625,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-09T13:26:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ac75d70_58f28616",
      "range": {
        "startLine": 623,
        "startChar": 4,
        "endLine": 625,
        "endChar": 84
      },
      "revId": "a996bd72adb402760c4fa85efcd84e70419e1b50",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c4b3791_f3083b36",
        "filename": "src/parser.c",
        "patchSetId": 2
      },
      "lineNbr": 372,
      "author": {
        "id": 1018755
      },
      "writtenOn": "2021-12-08T20:02:19Z",
      "side": 1,
      "message": "(defect) type -\u003e ype",
      "range": {
        "startLine": 372,
        "startChar": 36,
        "endLine": 372,
        "endChar": 40
      },
      "revId": "a996bd72adb402760c4fa85efcd84e70419e1b50",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb1d48e7_a5e38230",
        "filename": "src/parser.c",
        "patchSetId": 2
      },
      "lineNbr": 372,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2021-12-09T13:26:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c4b3791_f3083b36",
      "range": {
        "startLine": 372,
        "startChar": 36,
        "endLine": 372,
        "endChar": 40
      },
      "revId": "a996bd72adb402760c4fa85efcd84e70419e1b50",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}